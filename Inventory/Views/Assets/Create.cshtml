@model Inventory.Models.Asset

@{
    ViewBag.Title = "Create";
}

<title>Create Asset</title>

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h2>Create Asset</h2>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<section class="content">
    <div class="card bg-light mb-3">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="card-body form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row form-group">
                    @Html.LabelFor(model => model.Ser_Num, "Serial Number :", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ser_Num, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ser_Num, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.Mod_Num, "Model Number :", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mod_Num, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mod_Num, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.Ast_Type, "Asset Type :", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ast_Type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ast_Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.Cost, "Cost :", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Date, "Date :", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Created_By, "Created By :", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Created_By, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Created_By, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Updated_By, "Updated By :", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Updated_By, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Updated_By, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Created_At, "Created At :", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Created_At, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Created_At, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Updated_At, "Updated At :", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Updated_At, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Updated_At, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="row form-group">
                    @Html.LabelFor(model => model.Is_Active, "Is Active :", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Is_Active)
                            @Html.ValidationMessageFor(model => model.Is_Active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="float: right">
                    <div class="col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
